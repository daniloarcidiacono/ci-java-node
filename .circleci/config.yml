version: 2
jobs:
  build:
    working_directory: /app
    docker:
      - image: docker:17.05.0-ce-git

    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build docker images
          command: |
            docker build -t ci-java-node:0.0.1 .
            docker tag ci-java-node $DOCKER_HUB_USER_ID/ci-java-node:latest

      - deploy:
          name: Publish application to docker hub
          command: |
            docker login -e $DOCKER_HUB_EMAIL -u $DOCKER_HUB_USER_ID -p $DOCKER_HUB_PWD
            docker push $DOCKER_HUB_USER_ID/ci-java-node:0.0.1
            docker push $DOCKER_HUB_USER_ID/ci-java-node:latest

#      - restore_cache:
#          keys:
#            - v1-{{ .Branch }}
#          paths:
#            - /caches/ci-java-node.tar
#      - run:
#          name: Load Docker image layer cache
#          command: |
#            set +o pipefail
#            docker load -i /caches/ci-java-node.tar | true
#      - run:
#          name: Build application Docker image
#          command: |
#            docker build --cache-from=ci-java-node -t ci-java-node .
#      - run:
#          name: Save Docker image layer cache
#          command: |
#            mkdir -p /caches
#            docker save -o /caches/ci-java-node.tar app
#      - save_cache:
#          key: v1-{{ .Branch }}-{{ epoch }}
#          paths:
#            - /caches/ci-java-node.tar
#      - deploy:
#          name: Push application Docker image
#          command: |
#            if [ "${CIRCLE_BRANCH}" == "master" ]; then
#              login="$(aws ecr get-login)"
#              ${login}
#              docker tag ci-java-node "${ECR_ENDPOINT}/ci-java-node:${CIRCLE_SHA1}"
#              docker push "${ECR_ENDPOINT}/ci-java-node:${CIRCLE_SHA1}"
#            fi
